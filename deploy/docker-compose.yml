version: "3.8"

services:
  db:
    image: postgres:16
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: crud_project
      POSTGRES_PORT: 5432
    ports:
      - "5432:5432"
    networks:
      - app_network
    volumes:
      - C:/Users/aidyn/Desktop/crud_project/deploy/init.sql:/docker-entrypoint-initdb.d/init.sql

  rest-server:
    build:
      context: ..
      dockerfile: deploy/Dockerfile.server
    container_name: rest-server
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/crud_project?sslmode=disable
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_SERVICE_NAME=rest-server
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_TRACES_EXPORTER=otlp
      - KRATOS_PUBLIC_URL=http://kratos:4433
      - KRATOS_ADMIN_URL=http://kratos:4434
    depends_on:
      - db
      - kratos
    networks:
      - app_network

  otel-collector:
    image: otel/opentelemetry-collector
    container_name: otel-collector
    networks:
      - app_network
    ports:
      - "9464:9464"
      - "4317:4317"
      - "4318:4318"
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector.yaml
    command:
      - "--config=/etc/otel-collector.yaml"

  prometheus:
    image: prom/prometheus:v3.2.1
    container_name: prometheus
    networks:
      - app_network
    ports:
      - "9090:9090"
    volumes:
      - C:/Users/aidyn/Desktop/crud_project/deploy/prometheus.yml:/etc/prometheus/prometheus.yml 

  jaeger:
    image: jaegertracing/all-in-one:1.60
    container_name: jaeger
    ports:
      - "16686:16686"
    networks:
      - app_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
      - jaeger
    networks:
      - app_network

  kratos-db:
    image: postgres:14
    environment:
      POSTGRES_USER: kratos
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: kratos
    ports:
      - "5433:5432"  # Изменен порт, чтобы избежать конфликта
    volumes:
      - kratos-postgres:/var/lib/postgresql/data
    networks:
      - app_network

  kratos-migrate:
    image: oryd/kratos:v1.3.1
    environment:
      - DSN=postgres://kratos:secret@kratos-db:5432/kratos?sslmode=disable
    volumes:
      - ../config/kratos:/etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    networks:
      - app_network
    depends_on:
      - kratos-db

  kratos:
    image: oryd/kratos:v1.3.1
    ports:
      - "4433:4433" # public
      - "4434:4434" # admin
    environment:
      - DSN=postgres://kratos:secret@kratos-db:5432/kratos?sslmode=disable
    volumes:
      - ../config/kratos:/etc/config/kratos
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    networks:
      - app_network
    depends_on:
      - kratos-migrate

networks:
  app_network:
    driver: bridge

volumes:
  kratos-postgres: